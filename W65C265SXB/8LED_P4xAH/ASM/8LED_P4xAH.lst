  Fri Feb 24 2023 16:03                                                                                                Page 1

    "W65C816S Simulator Program V 1.00 for W65C816 - W65C816S_Demo.asm"
    

                                             ***************************************
                                             **      WDC 65C816 Macro Assembler   **
                                             **                                   **
                                             **     Version 3.49.1- Feb  6 2006    **
                                             ***************************************

     1                        ; File: W65C265S_LEDDemo.asm
     2                        ; 08/08/2013
     3                        
     4                             PW 128         ;Page Width (# of char/line) 
     5                             PL 60          ;Page Length for HP Laser
     6                             INCLIST ON     ;Add Include files in Listing
     7                        
     8                        				;*********************************************
     9                        				;Test for Valid Processor defined in -D option
    10                        				;*********************************************
    11                        	IF	USING_816
    12                        	ELSE
    13                        		EXIT         "Not Valid Processor: Use -DUSING_02, etc. ! ! ! ! ! ! ! ! ! ! ! !"
    14                        	ENDIF
    15                        
    16                        
    17                        
    18                        
    19                        ;****************************************************************************
    20                        ;****************************************************************************
    21                        ; End of testing for proper Command line Options for Assembly of this program
    22                        ;****************************************************************************
    23                        ;****************************************************************************
    24                        
    25                        
    26                        			title  "W65C816S Simulator Program V 1.00 for W65C816 - W65C816S_Demo.asm"
    27                        			sttl
    28                        
    29                        
    30                        ; bgnpkhdr
    31                        ;***************************************************************************
    32                        ;  FILE_NAME: W65C265S_LEDDemo.asm
    33                        ;
    34                        ;  DATA_RIGHTS: Western Design Center
    35                        ;               Copyright(C) 2014
    36                        ;               All rights reserved. Reproduction in any manner, 
    37                        ;               in whole or in part, is strictly prohibited without
    38                        ;               the prior written approval of The Western Design Center, Inc (WDC).
    39                        ;
    40                        ;               Information contained in this publication regarding
    41                        ;               device applications and the like is intended through
    42                        ;               suggestion only and may be superseded by updates.  
    43                        ;               It is your responsibility to ensure that your application
    44                        ;               meets with your specifications.  No representation or
    45                        ;               warranty is given and no liability is assumed by 
    46                        ;               Western Design Center, Inc. with respect to the accuracy
    47                        ;               or use of such information, or infringement of patents
    48                        ;               or other intellectual property rights arising from such
    49                        ;               use or otherwise.  Use of WDC's products
  Fri Feb 24 2023 16:03                                                                                                Page 2

    "W65C816S Simulator Program V 1.00 for W65C816 - W65C816S_Demo.asm"
    

    50                        ;               as critical components in life support systems is not
    51                        ;               authorized except with express written approval by
    52                        ;               WDC.  No licenses are conveyed,implicitly or otherwise, 
    53                        ;								under any intellectual property rights.
    54                        ;
    55                        ;
    56                        ;
    57                        ;  TITLE: W65C265S_LEDDemo
    58                        ;
    59                        ;  DESCRIPTION: This File describes the WDC Simulator Example Program.
    60                        ;
    61                        ;
    62                        ;
    63                        ;  DEFINED FUNCTIONS:
    64                        ;          badVec
    65                        ;                   - Process a Bad Interrupt Vector - Hang!
    66                        ;
    67                        ;  SPECIAL_CONSIDERATIONS:
    68                        ;
    69                        ;
    70                        ;  SHARED_DATA:
    71                        ;          None
    72                        ;
    73                        ;  GLOBAL_MODULES:
    74                        ;          None
    75                        ;
    76                        ;  LOCAL_MODULES:
    77                        ;          See above in "DEFINED FUNCTIONS"
    78                        ;
    79                        ;  AUTHOR: David Gray
    80                        ;
    81                        ;  CREATION DATE: July 3, 2014
    82                        ;
    83                        ;  REVISION HISTORY
    84                        ;     Name           Date         Description
    85                        ;     ------------   ----------   ------------------------------------------------
    86                        ;     David Gray		 07/03/2014   1.00 Initial
    87                        ;
    88                        ;
    89                        ; NOTE:
    90                        ;    Change the lines for each version - current version is 1.00b
    91                        ;    See - 
    92                        ;         title  "W65C265S_LEDDemo Program V 1.0x for W65C265S - W65C265S_LEDDemo.asm"
    93                        ;
    94                        ;
    95                        ;***************************************************************************
    96                        ;endpkhdr
    97                        
    98                        
    99                        ;***************************************************************************
   100                        ;                             Include Files
   101                        ;***************************************************************************
   102                        ;None
   103                        
   104                        
  Fri Feb 24 2023 16:03                                                                                                Page 3

    "W65C816S Simulator Program V 1.00 for W65C816 - W65C816S_Demo.asm"
    

   105                        ;***************************************************************************
   106                        ;                              Global Modules
   107                        ;***************************************************************************
   108                        ;None
   109                        
   110                        ;***************************************************************************
   111                        ;                              External Modules
   112                        ;***************************************************************************
   113                        ;None
   114                        
   115                        ;***************************************************************************
   116                        ;                              External Variables
   117                        ;***************************************************************************
   118                        ;None
   119                        
   120                        
   121                        ;***************************************************************************
   122                        ;                               Local Constants
   123                        ;***************************************************************************
   124                        ;
   125                        ;	VIA_BASE:	equ	$f0
   126                        ;	VIA_BASE:	equ	$7FC0		;; base address of VIA port on SXB
   127                        ;; IO Ports 
   128             0000DF27     PCS7: 			equ $DF27 ;; Port 7 Chip Select
   129             0000DF26     PDD6: 			equ $DF26 ;; Port 6 Data Direction Register
   130             0000DF25     PDD5: 			equ $DF25 ;; Port 5 Data Direction Register
   131             0000DF24     PDD4: 			equ $DF24 ;; Port 4 Data Direction Register
   132             0000DF23     PD7:  			equ $DF23 ;; Port 3 Data Register
   133             0000DF22     PD6:  			equ $DF22 ;; Port 2 Data Register
   134             0000DF21     PD5:  			equ $DF21 ;; Port 1 Data Register
   135             0000DF20     PD4:  			equ $DF20 ;; Port 0 Data Register
   136             0000DF07     PDD3:				equ $DF07	;; Port 3 Data Direction Register
   137             0000DF06     PDD2:				equ $DF06	;; Port 2 Data Direction Register
   138             0000DF05     PDD1:				equ $DF05	;; Port 1 Data Direction Register
   139             0000DF04     PDD0:				equ $DF04	;; Port 0 Data Direction Register
   140             0000DF03     PD3:				equ $DF03 ;; Port 3 Data Register
   141             0000DF02     PD2:				equ $DF02 ;; Port 2 Data Register
   142             0000DF01     PD1:				equ $DF01 ;; Port 1 Data Register
   143             0000DF00     PD0:				equ $DF00 ;; Port 0 Data Register
   144                        ;; Control and Status Register Memory Map
   145             0000DF49     UIER:  			equ $DF49 ;; UART Interrupt Enable Register
   146             0000DF48     UIFR:  			equ $DF48 ;; UART Interrupt Flag Register
   147             0000DF47     EIER:  			equ $DF47 ;; Edge Interrupt Enable Register
   148             0000DF46     TIER:  			equ $DF46 ;; Timer Interrupt Enable Register
   149             0000DF45     EIFR:  			equ $DF45 ;; Edge Interrupt Flag Register
   150             0000DF44     TIFR:  			equ $DF44 ;; Timer Interrupt Flag Register
   151             0000DF43     TER:  			equ $DF43 ;; Timer Enable Register
   152             0000DF42     TCR:  			equ $DF42 ;; Timer Control Register
   153             0000DF41     SSCR:  			equ $DF41 ;; System Speed Control Register
   154             0000DF40     BCR:  			equ $DF40 ;; Bus Control Register
   155                        ;; Timer Register Memory Map
   156             0000DF6F     T7CH:				equ $DF6F ;; Timer 7 Counter High
   157             0000DF6E     T7CL:				equ $DF6E ;; Timer 7 Counter Low
   158             0000DF6D     T6CH:				equ $DF6D ;; Timer 6 Counter High
   159             0000DF6C     T6CL:				equ $DF6C ;; Timer 6 Counter Low
  Fri Feb 24 2023 16:03                                                                                                Page 4

    "W65C816S Simulator Program V 1.00 for W65C816 - W65C816S_Demo.asm"
    

   160             0000DF6B     T5CH:				equ $DF6B ;; Timer 5 Counter High
   161             0000DF6A     T5CL:				equ $DF6A ;; Timer 5 Counter Low
   162             0000DF69     T4CH:				equ $DF69 ;; Timer 4 Counter High
   163             0000DF68     T4CL:				equ $DF68 ;; Timer 4 Counter Low
   164             0000DF67     T3CH:				equ $DF67 ;; Timer 3 Counter High
   165             0000DF66     T3CL:				equ $DF66 ;; Timer 3 Counter Low
   166             0000DF65     T2CH:				equ $DF65 ;; Timer 2 Counter High
   167             0000DF64     T2CL:				equ $DF64 ;; Timer 2 Counter Low
   168             0000DF63     T1CH:				equ $DF63 ;; Timer 1 Counter High 
   169             0000DF62     T1CL:				equ $DF62 ;; Timer 1 Counter Low
   170             0000DF61     T0CH:				equ $DF61 ;; Timer 0 Counter High 
   171             0000DF60     T0CL:				equ $DF60 ;; Timer 0 Counter Low
   172                        ;;  Latches  
   173             0000DF5F     T7LH:				equ $DF5F ;; Timer 7 Latch High
   174             0000DF5E     T7LL:				equ $DF5E ;; Timer 7 Latch Low  
   175             0000DF5F     T6LH:				equ $DF5F ;; Timer 6 Latch High   
   176             0000DF5E     T6LL:				equ $DF5E ;; Timer 6 Latch Low    
   177             0000DF5F     T5LH:				equ $DF5F ;; Timer 5 Latch High 
   178             0000DF5E     T5LL:				equ $DF5E ;; Timer 5 Latch Low  
   179             0000DF5F     T4LH:				equ $DF5F ;; Timer 4 Latch High 
   180             0000DF5E     T4LL:				equ $DF5E ;; Timer 4 Latch Low  
   181             0000DF5F     T3LH:				equ $DF5F ;; Timer 3 Latch High 
   182             0000DF5E     T3LL:				equ $DF5E ;; Timer 3 Latch Low  
   183             0000DF5F     T2LH:				equ $DF5F ;; Timer 2 Latch High 
   184             0000DF5E     T2LL:				equ $DF5E ;; Timer 2 Latch Low  
   185             0000DF5F     T1LH:				equ $DF5F ;; Timer 1 Latch High 
   186             0000DF5E     T1LL:				equ $DF5E ;; Timer 1 Latch Low  
   187             0000DF5F     T0LH:				equ $DF5F ;; Timer 0 Latch High 
   188             0000DF5E     T0LL:				equ $DF5E ;; Timer 0 Latch Low  
   189                        ;; On Chip RAM
   190             0000DF80     OCRAM_BASE: equ $DF80 ;; RAM Registers
   191                          
   192                        ;; Emulation Mode Vector Table
   193             0000FFFE     IRQBRK:			equ $FFFE ;; BRK - Software Interrupt
   194             0000FFFC     IRQRES:			equ $FFFC ;; RES - "REStart" Interrupt  
   195             0000FFFA     IRQNMI:			equ $FFFA ;; Non-Maskable Interrupt
   196             0000FFF8     IABORT:			equ $FFF8 ;; ABORT Interrupt          
   197                        ;  IRQRVD:			equ $FFF6 ;; Reserved
   198             0000FFF4     IRQCOP:			equ $FFF4 ;; COP Software Interrupt
   199                        ;  IRQRVD:			equ $FFF2 ;; Reserved  
   200                        ;  IRQRVD:			equ $FFF0 ;; Reserved 
   201             0000FFDE     IRQ:  			equ $FFDE  ;; IRQ Level Interrupt
   202             0000FFDC     IRQPIB:			equ $FFDC  ;; PIB Interrupt 
   203             0000FFDA     IRNE66:			equ $FFDA  ;; Negative Edge Interrupt on P66
   204             0000FFD8     IRNE64:			equ $FFD8	 ;; Negative Edge Interrupt on P64
   205             0000FFD6     IRPE62:			equ $FFD6	 ;; Positive Edge Interrupt on P62 for PWM
   206             0000FFD4     IRPE60:			equ $FFD4	 ;; Positive Edge Interrupt on P60
   207             0000FFD2     IRNE57:			equ $FFD2  ;; Negative Edge Interrupt on P57
   208             0000FFD0     IRPE56:			equ $FFD0	 ;; Positive Edge Interrupt on P56
   209             0000FFCE     IRQT7:  		equ $FFCE	 ;; Timer 7 Interrupt 
   210             0000FFCC     IRQT6:  		equ $FFCC	 ;; Timer 6 Interrupt 
   211             0000FFCA     IRQT5:  		equ $FFCA	 ;; Timer 5 Interrupt 
   212             0000FFC8     IRQT4:  		equ $FFC8	 ;; Timer 4 Interrupt 
   213             0000FFC6     IRQT3:  		equ $FFC6	 ;; Timer 3 Interrupt 
   214             0000FFC4     IRQT2:  		equ $FFC4	 ;; Timer 2 Interrupt 
  Fri Feb 24 2023 16:03                                                                                                Page 5

    "W65C816S Simulator Program V 1.00 for W65C816 - W65C816S_Demo.asm"
    

   215             0000FFC2   	IRQT1:  		equ $FFC2	 ;; Timer 1 Interrupt 
   216             0000FFC0   	IRQT0:  		equ $FFC0	 ;; Timer 0 Interrupt 
   217                        
   218                        
   219                        ;		CHIP	65C02
   220                        		LONGI	OFF
   221                        		LONGA	OFF
   222                        
   223                        	.sttl "W65C265S Demo Code"
   224                        	.page
   225                        ;***************************************************************************
  Fri Feb 24 2023 16:03                                                                                                Page 6

    "W65C816S Simulator Program V 1.00 for W65C816 - W65C816S_Demo.asm"
    "W65C265S Demo Code"

   226                        ;***************************************************************************
   227                        ;                    W65C816S_Demo Code Section
   228                        ;***************************************************************************
   229                        ;***************************************************************************
   230                        
   231                        ;
   232                        ;Example code to make a P47 Control and LED
   233                        
   234                        
   235                        		org	$2000
   236                        
   237                        	START:
   238 00:2000: 78           		sei
   239                        
   240 00:2001: D8           		cld
   241 00:2002: A2 FF        		ldx	#$ff
   242 00:2004: 9A           		txs
   243                        
   244 00:2005: AD 24 DF     		lda PDD4				; Load value of P4 Data Direction Register.  
   245 00:2008: 8D 00 30     		sta $3000
   246 00:200B: 29 FF        		and #$FF
   247 00:200D: 89 80        		bit #%10000000	; $90 - Check if P47 is an output   - All segments with a '0' light up
   248 00:200F: F0 05        		beq NOSETDDR		; Branch down to set Data Reg if P46 is an output
   249 00:2011: 09 80        		ora #%10000000	; Set P46 HIGH or OUTPUT, do not change others.  	
   250 00:2013: 8D 01 30     		sta $3001
   251                        NOSETDDR:
   252 00:2016: AD 20 DF     		lda PD4
   253 00:2019: 8D 10 30     		sta $3010
   254                        ;		AND #%01111111			; AND Acc ($8F) with current value of P4 Data reg.  Sets
                     P47 LOW
   255 00:201C: 09 80        		ora #%10000000			; OR Acc ($90) with current value of P4 Data reg.  Sets 
                    P47 HIGH
   256 00:201E: 8D 11 30     		sta $3011
   257 00:2021: 8D 20 DF     		sta PD4
   258 00:2024: 6B           		rtl
   259                        		
   260                        DONELOOP:
   261                        ;		bra DONELOOP
   262                        		
   263                        
   264                        ;;-------------------------------------------------------------------------
   265                        ;; FUNCTION NAME	: Event Hander re-vectors
   266                        ;;------------------:------------------------------------------------------
   267                        	IRQHandler:
   268 00:2025: 48           		pha
   269 00:2026: 68           		pla
   270 00:2027: 40           		rti
   271                        
   272                        badVec:		; $FFE0 - IRQRVD2(134)
   273 00:2028: 08           	php
   274 00:2029: 48           	pha
   275 00:202A: A9 FF        	lda #$FF
   276                        				;clear Irq
   277 00:202C: 68           	pla
   278 00:202D: 28           	plp
  Fri Feb 24 2023 16:03                                                                                                Page 7

    "W65C816S Simulator Program V 1.00 for W65C816 - W65C816S_Demo.asm"
    "W65C265S Demo Code"

   279 00:202E: 40           	rti
   280                        		;;-----------------------------
   281                        		;;
   282                        		;;		Reset and Interrupt Vectors (define for 265, 816/02 are subsets)
   283                        		;;
   284                        		;;-----------------------------
   285                        
   286                        Shadow_VECTORS	SECTION OFFSET $7EE0
   287                        					;65C816 Interrupt Vectors
   288                        					;Status bit E = 0 (Native mode, 16 bit mode)
   289 00:7EE0: 28 20        		dw	badVec		; $FFE0 - IRQRVD4(816)
   290 00:7EE2: 28 20        		dw	badVec		; $FFE2 - IRQRVD5(816)
   291 00:7EE4: 28 20        		dw	badVec		; $FFE4 - COP(816)
   292 00:7EE6: 28 20        		dw	badVec		; $FFE6 - BRK(816)
   293 00:7EE8: 28 20        		dw	badVec		; $FFE8 - ABORT(816)
   294 00:7EEA: 28 20        		dw	badVec		; $FFEA - NMI(816)
   295 00:7EEC: 28 20        		dw	badVec		; $FFEC - IRQRVD(816)
   296 00:7EEE: 28 20        		dw	badVec		; $FFEE - IRQ(816)
   297                        					;Status bit E = 1 (Emulation mode, 8 bit mode)
   298 00:7EF0: 28 20        		dw	badVec		; $FFF0 - IRQRVD2(8 bit Emulation)(IRQRVD(265))
   299 00:7EF2: 28 20        		dw	badVec		; $FFF2 - IRQRVD1(8 bit Emulation)(IRQRVD(265))
   300 00:7EF4: 28 20        		dw	badVec		; $FFF4 - COP(8 bit Emulation)
   301 00:7EF6: 28 20        		dw	badVec		; $FFF6 - IRQRVD0(8 bit Emulation)(IRQRVD(265))
   302 00:7EF8: 28 20        		dw	badVec		; $FFF8 - ABORT(8 bit Emulation)
   303                        
   304                        					; Common 8 bit Vectors for all CPUs
   305 00:7EFA: 28 20        		dw	badVec		; $FFFA -  NMIRQ (ALL)
   306 00:7EFC: 00 20        		dw	START		; $FFFC -  RESET (ALL)
   307 00:7EFE: 25 20        		dw	IRQHandler	; $FFFE -  IRQBRK (ALL)
   308                        		
   309 00:7F00:              	ends
   310                        	
   311                        vectors	SECTION OFFSET $FFE0
   312                        					;65C816 Interrupt Vectors
   313                        					;Status bit E = 0 (Native mode, 16 bit mode)
   314 00:FFE0: 28 20        		dw	badVec		; $FFE0 - IRQRVD4(816)
   315 00:FFE2: 28 20        		dw	badVec		; $FFE2 - IRQRVD5(816)
   316 00:FFE4: 28 20        		dw	badVec		; $FFE4 - COP(816)
   317 00:FFE6: 28 20        		dw	badVec		; $FFE6 - BRK(816)
   318 00:FFE8: 28 20        		dw	badVec		; $FFE8 - ABORT(816)
   319 00:FFEA: 28 20        		dw	badVec		; $FFEA - NMI(816)
   320 00:FFEC: 28 20        		dw	badVec		; $FFEC - IRQRVD(816)
   321 00:FFEE: 28 20        		dw	badVec		; $FFEE - IRQ(816)
   322                        					;Status bit E = 1 (Emulation mode, 8 bit mode)
   323 00:FFF0: 28 20        		dw	badVec		; $FFF0 - IRQRVD2(8 bit Emulation)(IRQRVD(265))
   324 00:FFF2: 28 20        		dw	badVec		; $FFF2 - IRQRVD1(8 bit Emulation)(IRQRVD(265))
   325 00:FFF4: 28 20        		dw	badVec		; $FFF4 - COP(8 bit Emulation)
   326 00:FFF6: 28 20        		dw	badVec		; $FFF6 - IRQRVD0(8 bit Emulation)(IRQRVD(265))
   327 00:FFF8: 28 20        		dw	badVec		; $FFF8 - ABORT(8 bit Emulation)
   328                        
   329                        					; Common 8 bit Vectors for all CPUs
   330 00:FFFA: 28 20        		dw	badVec		; $FFFA -  NMIRQ (ALL)
   331 00:FFFC: 00 20        		dw	START		; $FFFC -  RESET (ALL)
   332 00:FFFE: 25 20        		dw	IRQHandler	; $FFFE -  IRQBRK (ALL)
   333                        		
  Fri Feb 24 2023 16:03                                                                                                Page 8

    "W65C816S Simulator Program V 1.00 for W65C816 - W65C816S_Demo.asm"
    "W65C265S Demo Code"

   334 01:0000:              		ends
   335                        	        end


      Lines assembled: 335
      Errors: 0
